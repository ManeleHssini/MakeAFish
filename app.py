# -*- coding: utf-8 -*-
"""app

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1lD_lwE-zOwjxsMlYSikiT4vV7Nx5DIDG
"""

import streamlit as st
from traitement import fusion_intelligente_avec_photo
from traitement_multiple import traitement_par_batch
import os
import zipfile
import tempfile
import shutil

# Configuration de la page
st.set_page_config(
    page_title="MakeAFish - Fusion Fiches Sanitaires",
    page_icon="üêü",
    layout="wide",
    initial_sidebar_state="expanded"
)

# CSS personnalis√© pour le th√®me oc√©an avec vrai poisson anim√©
st.markdown("""
<style>
    @import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap');

    * {
        font-family: 'Inter', sans-serif;
    }

    .main-header {
        text-align: center;
        padding: 3rem 2rem;
        background: linear-gradient(135deg, #1e3c72 0%, #2a5298 25%, #4facfe 75%, #00f2fe 100%);
        color: white;
        border-radius: 20px;
        margin-bottom: 2rem;
        box-shadow: 0 15px 35px rgba(31, 38, 135, 0.2);
        position: relative;
        overflow: hidden;
    }

    .main-header::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1000 100'%3E%3Cpath d='M0,20 C200,60 400,10 600,30 C800,50 900,20 1000,40 L1000,100 L0,100 Z' fill='rgba(255,255,255,0.1)'/%3E%3C/svg%3E") repeat-x;
        animation: wave-bg 8s ease-in-out infinite;
    }

    @keyframes wave-bg {
        0%, 100% { transform: translateX(0); }
        50% { transform: translateX(-50px); }
    }

    .swimming-fish {
        position: absolute;
        top: 20px;
        right: 30px;
        width: 60px;
        height: 40px;
        animation: swim-around 12s ease-in-out infinite;
        z-index: 10;
    }

    .fish-body {
        position: relative;
        width: 45px;
        height: 25px;
        background: linear-gradient(45deg, #ff6b6b, #ffa500, #ffeb3b);
        border-radius: 50% 10px 50% 10px;
        transform: rotate(-10deg);
    }

    .fish-tail {
        position: absolute;
        right: -15px;
        top: 5px;
        width: 0;
        height: 0;
        border-left: 20px solid #ff6b6b;
        border-top: 8px solid transparent;
        border-bottom: 8px solid transparent;
        animation: tail-wave 1.5s ease-in-out infinite;
    }

    .fish-eye {
        position: absolute;
        left: 8px;
        top: 6px;
        width: 8px;
        height: 8px;
        background: white;
        border-radius: 50%;
        border: 2px solid #333;
    }

    .fish-fin-top {
        position: absolute;
        left: 15px;
        top: -8px;
        width: 0;
        height: 0;
        border-left: 10px solid #ffa500;
        border-top: 6px solid transparent;
        border-bottom: 6px solid transparent;
        transform: rotate(45deg);
        animation: fin-wave 2s ease-in-out infinite;
    }

    .fish-fin-bottom {
        position: absolute;
        left: 15px;
        bottom: -8px;
        width: 0;
        height: 0;
        border-left: 10px solid #ffa500;
        border-top: 6px solid transparent;
        border-bottom: 6px solid transparent;
        transform: rotate(-45deg);
        animation: fin-wave 2s ease-in-out infinite reverse;
    }

    @keyframes swim-around {
        0% { transform: translateX(0) translateY(0) rotate(0deg); }
        25% { transform: translateX(-100px) translateY(-20px) rotate(-15deg); }
        50% { transform: translateX(-200px) translateY(10px) rotate(0deg); }
        75% { transform: translateX(-100px) translateY(-10px) rotate(15deg); }
        100% { transform: translateX(0) translateY(0) rotate(0deg); }
    }

    @keyframes tail-wave {
        0%, 100% { transform: rotate(0deg) scaleX(1); }
        50% { transform: rotate(10deg) scaleX(0.8); }
    }

    @keyframes fin-wave {
        0%, 100% { transform: rotate(45deg) scale(1); }
        50% { transform: rotate(35deg) scale(0.9); }
    }

    .ocean-waves {
        position: absolute;
        bottom: 0;
        left: 0;
        width: 100%;
        height: 60px;
        background: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1200 120'%3E%3Cpath d='M0,60 C300,20 600,100 900,60 C1050,40 1200,80 1200,80 L1200,120 L0,120 Z' fill='rgba(255,255,255,0.15)'/%3E%3C/svg%3E") repeat-x;
        animation: wave-flow 6s ease-in-out infinite;
    }

    @keyframes wave-flow {
        0%, 100% { transform: translateX(0); }
        50% { transform: translateX(-100px); }
    }

    .mode-card {
        background: linear-gradient(145deg, #f8fafe 0%, #e8f4fd 100%);
        padding: 2.5rem;
        border-radius: 20px;
        border-left: 6px solid #4facfe;
        margin: 2rem 0;
        box-shadow: 0 8px 25px rgba(79, 172, 254, 0.15);
        position: relative;
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

    .mode-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 15px 40px rgba(79, 172, 254, 0.2);
    }

    .mode-card::before {
        content: '';
        position: absolute;
        top: 20px;
        right: 25px;
        width: 40px;
        height: 25px;
        background: linear-gradient(45deg, #4facfe, #00f2fe);
        border-radius: 50% 10px 50% 10px;
        animation: gentle-swim 4s ease-in-out infinite;
    }

    @keyframes gentle-swim {
        0%, 100% { transform: translateX(0) rotate(0deg); }
        50% { transform: translateX(10px) rotate(5deg); }
    }

    .success-box {
        background: linear-gradient(145deg, #d1f2eb 0%, #a3e4d7 100%);
        border: 2px solid #17a2b8;
        color: #0c5460;
        padding: 2rem;
        border-radius: 15px;
        margin: 1.5rem 0;
        position: relative;
        box-shadow: 0 5px 20px rgba(23, 162, 184, 0.2);
    }

    .success-box::before {
        content: '';
        position: absolute;
        top: 15px;
        right: 20px;
        width: 30px;
        height: 20px;
        background: linear-gradient(45deg, #28a745, #20c997);
        border-radius: 50% 10px 50% 10px;
        animation: happy-swim 3s ease-in-out infinite;
    }

    @keyframes happy-swim {
        0%, 100% { transform: scale(1) rotate(0deg); }
        50% { transform: scale(1.1) rotate(10deg); }
    }

    .error-box {
        background: linear-gradient(145deg, #fadbd8 0%, #f5b7b1 100%);
        border: 2px solid #e74c3c;
        color: #721c24;
        padding: 2rem;
        border-radius: 15px;
        margin: 1.5rem 0;
        position: relative;
        box-shadow: 0 5px 20px rgba(231, 76, 60, 0.2);
    }

    .error-box::before {
        content: '';
        position: absolute;
        top: 15px;
        right: 20px;
        width: 35px;
        height: 22px;
        background: linear-gradient(45deg, #e74c3c, #c0392b);
        border-radius: 50% 10px 50% 10px;
        animation: danger-swim 2s ease-in-out infinite;
    }

    @keyframes danger-swim {
        0%, 100% { transform: translateX(0) rotate(0deg); }
        25% { transform: translateX(-5px) rotate(-10deg); }
        75% { transform: translateX(5px) rotate(10deg); }
    }

    .sidebar-ocean {
        background: linear-gradient(180deg, #f0f9ff 0%, #e0f2fe 100%);
        border-radius: 15px;
        padding: 1.5rem;
        margin: 1.5rem 0;
        border: 2px solid #0284c7;
        position: relative;
    }

    .sidebar-ocean::after {
        content: '';
        position: absolute;
        bottom: 10px;
        right: 15px;
        width: 25px;
        height: 15px;
        background: linear-gradient(45deg, #0284c7, #0369a1);
        border-radius: 50% 10px 50% 10px;
        animation: sidebar-swim 5s ease-in-out infinite;
    }

    @keyframes sidebar-swim {
        0%, 100% { transform: translateY(0) rotate(0deg); }
        50% { transform: translateY(-5px) rotate(8deg); }
    }

    .metric-card {
        background: linear-gradient(145deg, #ffffff 0%, #f8fafc 100%);
        padding: 2rem;
        border-radius: 15px;
        border: 3px solid #4facfe;
        text-align: center;
        box-shadow: 0 5px 15px rgba(79, 172, 254, 0.15);
        transition: transform 0.3s ease;
        position: relative;
    }

    .metric-card:hover {
        transform: translateY(-5px);
    }

    .metric-card::before {
        content: '';
        position: absolute;
        top: 10px;
        right: 15px;
        width: 20px;
        height: 12px;
        background: linear-gradient(45deg, #4facfe, #00f2fe);
        border-radius: 50% 10px 50% 10px;
        animation: metric-swim 3s ease-in-out infinite;
    }

    @keyframes metric-swim {
        0%, 100% { opacity: 0.7; transform: translateX(0); }
        50% { opacity: 1; transform: translateX(5px); }
    }

    .footer-ocean {
        text-align: center;
        color: #1e40af;
        padding: 3rem;
        background: linear-gradient(145deg, #f0f9ff 0%, #dbeafe 100%);
        border-radius: 20px;
        margin-top: 3rem;
        border: 3px solid #3b82f6;
        position: relative;
        overflow: hidden;
    }

    .footer-ocean::before {
        content: '';
        position: absolute;
        top: 20px;
        left: 50%;
        transform: translateX(-50%);
        width: 80px;
        height: 50px;
        background: linear-gradient(45deg, #3b82f6, #1d4ed8);
        border-radius: 50% 15px 50% 15px;
        animation: footer-swim 8s ease-in-out infinite;
    }

    .footer-fish-eye {
        position: absolute;
        top: 35px;
        left: calc(50% - 25px);
        width: 8px;
        height: 8px;
        background: white;
        border-radius: 50%;
        border: 2px solid #1e40af;
        animation: footer-swim 8s ease-in-out infinite;
    }

    .footer-fish-tail {
        position: absolute;
        top: 30px;
        left: calc(50% + 25px);
        width: 0;
        height: 0;
        border-left: 20px solid #1d4ed8;
        border-top: 10px solid transparent;
        border-bottom: 10px solid transparent;
        animation: footer-swim 8s ease-in-out infinite, tail-wiggle 1.5s ease-in-out infinite;
    }

    @keyframes footer-swim {
        0%, 100% { transform: translateX(-50px); }
        50% { transform: translateX(50px); }
    }

    @keyframes tail-wiggle {
        0%, 100% { transform: rotate(0deg); }
        50% { transform: rotate(15deg); }
    }

    .ocean-button {
        background: linear-gradient(45deg, #4facfe 0%, #00f2fe 100%);
        color: white;
        border: none;
        padding: 15px 30px;
        border-radius: 30px;
        font-weight: 600;
        font-size: 1.1rem;
        box-shadow: 0 8px 25px rgba(79, 172, 254, 0.3);
        transition: all 0.3s ease;
        position: relative;
        overflow: hidden;
    }

    .ocean-button:hover {
        transform: translateY(-3px);
        box-shadow: 0 12px 35px rgba(79, 172, 254, 0.4);
    }

    .ocean-button::before {
        content: '';
        position: absolute;
        top: 50%;
        right: 20px;
        transform: translateY(-50%);
        width: 25px;
        height: 15px;
        background: rgba(255, 255, 255, 0.3);
        border-radius: 50% 8px 50% 8px;
        animation: button-swim 2s ease-in-out infinite;
    }

    @keyframes button-swim {
        0%, 100% { transform: translateY(-50%) translateX(0); }
        50% { transform: translateY(-50%) translateX(-5px); }
    }

    .file-upload-area {
        background: linear-gradient(145deg, #f8fafe 0%, #e8f4fd 100%);
        padding: 2rem;
        border-radius: 15px;
        border: 2px dashed #4facfe;
        margin: 1rem 0;
        transition: all 0.3s ease;
        position: relative;
    }

    .file-upload-area:hover {
        border-color: #00f2fe;
        background: linear-gradient(145deg, #f0f9ff 0%, #dbeafe 100%);
    }

    .bubbles {
        position: absolute;
        width: 100%;
        height: 100%;
        pointer-events: none;
    }

    .bubble {
        position: absolute;
        background: rgba(79, 172, 254, 0.3);
        border-radius: 50%;
        animation: bubble-rise 4s infinite ease-in-out;
    }

    .bubble:nth-child(1) { left: 10%; width: 10px; height: 10px; animation-delay: 0s; }
    .bubble:nth-child(2) { left: 20%; width: 15px; height: 15px; animation-delay: 1s; }
    .bubble:nth-child(3) { left: 35%; width: 8px; height: 8px; animation-delay: 2s; }
    .bubble:nth-child(4) { left: 50%; width: 12px; height: 12px; animation-delay: 0.5s; }
    .bubble:nth-child(5) { left: 70%; width: 9px; height: 9px; animation-delay: 1.5s; }
    .bubble:nth-child(6) { left: 80%; width: 14px; height: 14px; animation-delay: 2.5s; }

    @keyframes bubble-rise {
        0% {
            bottom: -20px;
            opacity: 0;
        }
        10% {
            opacity: 1;
        }
        90% {
            opacity: 1;
        }
        100% {
            bottom: 100%;
            opacity: 0;
            transform: translateX(10px);
        }
    }
</style>
""", unsafe_allow_html=True)

# En-t√™te principal avec poisson anim√© r√©aliste
st.markdown("""
<div class="main-header">
    <div class="swimming-fish">
        <div class="fish-body">
            <div class="fish-eye"></div>
            <div class="fish-fin-top"></div>
            <div class="fish-fin-bottom"></div>
        </div>
        <div class="fish-tail"></div>
    </div>
    <div class="ocean-waves"></div>
    <div class="bubbles">
        <div class="bubble"></div>
        <div class="bubble"></div>
        <div class="bubble"></div>
        <div class="bubble"></div>
        <div class="bubble"></div>
        <div class="bubble"></div>
    </div>
    <h1 style="margin-bottom: 0.5rem; font-weight: 700; font-size: 2.5rem;">MakeAFish</h1>
    <h2 style="margin: 0; font-weight: 400; font-size: 1.5rem;">Fusion Automatique - Fiches Sanitaires & Photos d'Identit√©</h2>
    <p style="margin-top: 1.5rem; font-size: 1.2rem; font-weight: 300;">Naviguez dans l'oc√©an de la productivit√© avec notre outil professionnel</p>
</div>
""", unsafe_allow_html=True)

# Sidebar avec th√®me oc√©an
st.sidebar.markdown("""
<div style="text-align: center; padding: 2rem 1rem; background: linear-gradient(45deg, #4facfe 0%, #00f2fe 100%); border-radius: 15px; color: white; margin-bottom: 1.5rem; position: relative;">
    <h3 style="margin: 0 0 0.5rem 0; font-weight: 600;">Panneau de Navigation</h3>
    <p style="margin: 0; font-size: 0.95rem; font-weight: 300;">Configurez votre exp√©rience aquatique</p>
</div>
""", unsafe_allow_html=True)

mode = st.sidebar.selectbox(
    "Choisissez votre mode de navigation",
    ["Mode Simple (1 fiche)", "Traitement par Banc de poissons (Mode Multiple)"],
    help="Mode Simple: Une seule fiche √† traiter | Mode Multiple: Tout un banc de fiches simultan√©ment"
)

st.sidebar.markdown("""
<div class="sidebar-ocean">
    <h4 style="color: #0284c7; margin-bottom: 1.5rem; font-weight: 600;">Guide du Capitaine</h4>
    <div style="background: white; padding: 1.5rem; border-radius: 12px; border-left: 4px solid #0284c7;">
        <p style="margin: 0 0 1rem 0; font-size: 0.9rem; line-height: 1.5;"><strong>Mode Simple :</strong><br>
        Chargez une fiche PDF et une photo pour cr√©er votre document final en quelques clics.</p>
        <hr style="margin: 1rem 0; border-color: #0284c7; opacity: 0.3;">
        <p style="margin: 0; font-size: 0.9rem; line-height: 1.5;"><strong>Traitement par Banc :</strong><br>
        Traitez plusieurs fiches simultan√©ment ! Les fichiers doivent avoir des noms identiques<br>
        </p>
    </div>
</div>
""", unsafe_allow_html=True)

# V√©rification du mod√®le avec style oc√©an
modele_path = "fiche_modele.pdf"
if not os.path.exists(modele_path):
    st.markdown("""
    <div class="error-box">
        <strong>Alerte Maritime Critique !</strong><br>
        Le fichier <code>fiche_modele.pdf</code> est introuvable dans les eaux du r√©pertoire principal !<br>
        Navigation impossible sans ce fichier essentiel.
    </div>
    """, unsafe_allow_html=True)
    st.stop()

# ========================
# MODE SIMPLE
# ========================
if mode == "Mode Simple (1 fiche)":
    st.markdown("""
    <div class="mode-card">
        <h3 style="color: #4facfe; margin-bottom: 1.5rem; font-weight: 600; font-size: 1.4rem;">Navigation Simple - Traitement d'une fiche unique</h3>
        <p style="margin: 0; font-size: 1.05rem; line-height: 1.6; color: #64748b;">Plongez dans la simplicit√© ! Fusionnez une fiche sanitaire avec une photo d'identit√© pour cr√©er un document final parfaitement structur√©.</p>
    </div>
    """, unsafe_allow_html=True)

    col1, col2 = st.columns(2)

    with col1:
        st.markdown("""
        <div class="file-upload-area">
            <h4 style="color: #4facfe; margin: 0 0 1rem 0; font-weight: 600;">Fiche Sanitaire</h4>
            <p style="margin: 0; font-size: 0.9rem; color: #64748b;">Votre document principal au format PDF</p>
        </div>
        """, unsafe_allow_html=True)

        fiche_file = st.file_uploader(
            "S√©lectionnez la fiche sanitaire remplie",
            type=["pdf"],
            key="fiche_simple",
            help="Format PDF uniquement - Document pr√™t pour traitement"
        )

    with col2:
        st.markdown("""
        <div class="file-upload-area">
            <h4 style="color: #4facfe; margin: 0 0 1rem 0; font-weight: 600;">Photo d'Identit√©</h4>
            <p style="margin: 0; font-size: 0.9rem; color: #64748b;">Portrait officiel haute qualit√©</p>
        </div>
        """, unsafe_allow_html=True)

        photo_file = st.file_uploader(
            "S√©lectionnez la photo d'identit√©",
            type=["jpg", "jpeg", "png", "pdf"],
            key="photo_simple",
            help="Formats accept√©s: JPG, PNG, PDF - Qualit√© optimale recommand√©e"
        )

    if fiche_file and photo_file:
        st.markdown("""
        <div style="text-align: center; padding: 2.5rem; background: linear-gradient(145deg, #f0f9ff 0%, #dbeafe 100%); border-radius: 20px; margin: 2rem 0; border: 3px solid #4facfe; position: relative;">
            <h3 style="color: #4facfe; margin-bottom: 1rem; font-weight: 600; font-size: 1.5rem;">G√©n√©ration du Document Final</h3>
            <p style="margin: 0; font-size: 1.1rem; color: #64748b;">Pr√™t √† cr√©er votre document professionnel ? Lancez la fusion !</p>
        </div>
        """, unsafe_allow_html=True)

        col1, col2, col3 = st.columns([1, 2, 1])
        with col2:
            if st.button("D√©marrer la Fusion", type="primary", use_container_width=True):
                with st.spinner("Traitement en cours... Les algorithmes travaillent avec pr√©cision"):
                    try:
                        # Enregistrer la fiche temporaire
                        fiche_path = "fiche_temp.pdf"
                        with open(fiche_path, "wb") as f:
                            f.write(fiche_file.read())

                        # D√©terminer l'extension r√©elle du fichier photo
                        photo_ext = os.path.splitext(photo_file.name)[1].lower()
                        photo_path = f"photo_temp{photo_ext}"
                        with open(photo_path, "wb") as f:
                            f.write(photo_file.read())

                        output_path = "output/final.pdf"
                        os.makedirs("output", exist_ok=True)

                        # Traitement
                        fusion_intelligente_avec_photo(fiche_path, modele_path, photo_path, output_path)

                        # T√©l√©chargement
                        with open(output_path, "rb") as f:
                            st.download_button(
                                "T√©l√©charger le Document Final",
                                f.read(),
                                file_name="fiche_sanitaire_finale.pdf",
                                mime="application/pdf",
                                type="primary",
                                use_container_width=True
                            )

                        st.markdown("""
                        <div class="success-box">
                            <strong>Mission Accomplie avec Excellence !</strong><br>
                            Votre fiche sanitaire a √©t√© g√©n√©r√©e avec succ√®s. Le document final respecte tous les standards professionnels et est pr√™t √† l'utilisation.
                        </div>
                        """, unsafe_allow_html=True)

                    except Exception as e:
                        st.markdown(f"""
                        <div class="error-box">
                            <strong>Incident Technique D√©tect√© :</strong><br>
                            Une erreur syst√®me a interrompu le processus : {str(e)}<br>
                            Veuillez v√©rifier vos fichiers et r√©essayer.
                        </div>
                        """, unsafe_allow_html=True)

                    finally:
                        # Nettoyage des fichiers temporaires
                        for temp_file in [fiche_path, photo_path]:
                            try:
                                if os.path.exists(temp_file):
                                    os.remove(temp_file)
                            except:
                                pass

# ========================
# MODE MULTIPLE
# ========================
else:
    st.markdown("""
    <div class="mode-card">
        <h3 style="color: #4facfe; margin-bottom: 1.5rem; font-weight: 600; font-size: 1.4rem;">Traitement par Banc de Poissons - Traitement Multiple</h3>
        <p style="margin: 0; font-size: 1.05rem; line-height: 1.6; color: #64748b;">Optimisez votre productivit√© ! Traitez plusieurs fiches simultan√©ment avec une synchronisation parfaite. Id√©al pour les volumes importants de documents.</p>
    </div>
    """, unsafe_allow_html=True)

    st.markdown("""
    <div style="background: linear-gradient(145deg, #fef3c7 0%, #fde68a 100%); padding: 2rem; border-radius: 15px; border-left: 6px solid #f59e0b; margin: 2rem 0; position: relative;">
        <strong style="color: #92400e;">R√®gle d'Or du Capitaine :</strong><br>
        <span style="color: #92400e; font-size: 1.05rem; line-height: 1.5;">
        Pour une navigation en eaux calmes, veillez √† ce que les noms de fichiers correspondent parfaitement !<br>
        <em>Exemple professionnel : "Jean_Dupont.pdf" et "Jean_Dupont.jpg"</em>
        </span>
    </div>
    """, unsafe_allow_html=True)

    col1, col2 = st.columns(2)

    with col1:
        st.markdown("""
        <div class="file-upload-area">
            <h4 style="color: #4facfe; margin: 0 0 1rem 0; font-weight: 600;">Banc de Fiches Sanitaires</h4>
            <p style="margin: 0; font-size: 0.9rem; color: #64748b;">Vos documents PDF en formation synchronis√©e</p>
        </div>
        """, unsafe_allow_html=True)

        fiches_files = st.file_uploader(
            "S√©lectionnez toutes les fiches sanitaires (PDF)",
            type=["pdf"],
            accept_multiple_files=True,
            key="fiches_multiple_pdf",
            help="Tous les fichiers PDF √† traiter. Les noms doivent correspondre aux photos."
        )

    with col2:
        st.markdown("""
        <div class="file-upload-area">
            <h4 style="color: #4facfe; margin: 0 0 1rem 0; font-weight: 600;">Banc de Photos d'Identit√©</h4>
            <p style="margin: 0; font-size: 0.9rem; color: #64748b;">Vos portraits officiels haute qualit√© en s√©rie</p>
        </div>
        """, unsafe_allow_html=True)

        photos_files = st.file_uploader(
            "S√©lectionnez toutes les photos d'identit√© (JPG, PNG, PDF)",
            type=["jpg", "jpeg", "png", "pdf"],
            accept_multiple_files=True,
            key="photos_multiple_image",
            help="Toutes les photos correspondantes. Les noms doivent correspondre aux fiches PDF."
        )

    # --- Syst√®me d'analyse des correspondances ---
    if fiches_files and photos_files:
        noms_fiches = set(os.path.splitext(f.name)[0] for f in fiches_files)
        noms_photos = set(os.path.splitext(f.name)[0] for f in photos_files)

        correspondances = noms_fiches.intersection(noms_photos)
        fiches_seules = noms_fiches.difference(noms_photos)
        photos_seules = noms_photos.difference(noms_fiches)

        st.markdown("<hr>", unsafe_allow_html=True)
        st.markdown("<h3 style='color: #1e3c72; text-align: center; font-weight: 600;'>üìä Bilan du Banc de Poissons üìä</h3>", unsafe_allow_html=True)
        st.markdown("<p style='text-align: center; color: #64748b;'>Analyse des correspondances entre fiches et photos.</p>", unsafe_allow_html=True)

        col1, col2, col3 = st.columns(3)
        with col1:
            st.metric("‚úÖ Fichiers √† traiter", len(correspondances))
        with col2:
            st.metric("üìã Fiches sans photo", len(fiches_seules))
        with col3:
            st.metric("üì∏ Photos sans fiche", len(photos_seules))

        if correspondances:
            with st.expander(f"Voir les fichiers qui seront trait√©s ({len(correspondances)})"):
                for nom in sorted(correspondances):
                    # For display, show potential extensions for photo
                    photo_found_ext = next((ext for ext in ['.jpg', '.jpeg', '.png', '.pdf'] if f"{nom}{ext}" in [f.name for f in photos_files]), "N/A")
                    st.write(f"‚Ä¢ **{nom}.pdf** et **{nom}{photo_found_ext}**")
        else:
            st.markdown("""
            <div class="error-box">
                <strong>Attention, aucune correspondance trouv√©e !</strong><br>
                Pour le traitement par lot, assurez-vous que les noms de fichiers (sans l'extension) sont identiques entre les fiches et les photos.<br>
                Exemple: "Jean_Dupont.pdf" et "Jean_Dupont.jpg".
            </div>
            """, unsafe_allow_html=True)

        if fiches_seules or photos_seules:
            st.warning("‚ö†Ô∏è Certains fichiers n'ont pas de correspondance et ne seront **pas** trait√©s.")
            if fiches_seules:
                with st.expander(f"Voir les fiches sans photo ({len(fiches_seules)})"):
                    for nom in sorted(fiches_seules):
                        st.write(f"‚Ä¢ {nom}.pdf")
            if photos_seules:
                with st.expander(f"Voir les photos sans fiche ({len(photos_seules)})"):
                    for nom in sorted(photos_seules):
                        # Show the actual extension of the orphaned photo
                        orphaned_photo_name = next((f.name for f in photos_files if os.path.splitext(f.name)[0] == nom), f"{nom}.(ext inconnue)")
                        st.write(f"‚Ä¢ {orphaned_photo_name}")


        # --- SECTION DE TRAITEMENT (APPARA√éT SEULEMENT S'IL Y A DES CORRESPONDANCES) ---
        if len(correspondances) > 0:
            st.markdown("""
            <div style="text-align: center; padding: 2.5rem; background: linear-gradient(145deg, #f0f9ff 0%, #dbeafe 100%); border-radius: 20px; margin: 2rem 0; border: 3px solid #4facfe; position: relative;">
                <h3 style="color: #4facfe; margin-bottom: 1rem; font-weight: 600; font-size: 1.5rem;">Lancement du Traitement par Banc</h3>
                <p style="margin: 0; font-size: 1.1rem; color: #64748b;">Pr√©parez-vous √† une vague de documents g√©n√©r√©s !</p>
            </div>
            """, unsafe_allow_html=True)

            col1, col2, col3 = st.columns([1, 2, 1])
            with col2:
                if st.button("D√©marrer le Traitement par Banc", type="primary", use_container_width=True):
                    temp_dir = None
                    try:
                        # Cr√©er un r√©pertoire temporaire pour stocker les fichiers upload√©s
                        temp_dir = tempfile.mkdtemp()
                        temp_pdf_dir = os.path.join(temp_dir, "fiches_pdf")
                        temp_photo_dir = os.path.join(temp_dir, "photos")
                        os.makedirs(temp_pdf_dir, exist_ok=True)
                        os.makedirs(temp_photo_dir, exist_ok=True)

                        # Enregistrer les fiches PDF upload√©es qui ont une correspondance
                        for uploaded_file in fiches_files:
                            if os.path.splitext(uploaded_file.name)[0] in correspondances:
                                with open(os.path.join(temp_pdf_dir, uploaded_file.name), "wb") as f:
                                    f.write(uploaded_file.read())

                        # Enregistrer les photos upload√©es qui ont une correspondance
                        for uploaded_file in photos_files:
                            if os.path.splitext(uploaded_file.name)[0] in correspondances:
                                with open(os.path.join(temp_photo_dir, uploaded_file.name), "wb") as f:
                                    f.write(uploaded_file.read())

                        with st.spinner("Traitement des fiches par lot... Accrochez-vous, le banc de poissons arrive !"):
                            # ICI LA CORRECTION MAJEURE:
                            # Assurez-vous que traitement_par_batch re√ßoit les chemins des DOSSIERS temporaires
                            output_zip_path = traitement_par_batch(temp_pdf_dir, temp_photo_dir, modele_path)

                        if output_zip_path and os.path.exists(output_zip_path):
                            with open(output_zip_path, "rb") as f:
                                st.download_button(
                                    "T√©l√©charger toutes les Fiches Fusionn√©es (Zip)",
                                    f.read(),
                                    file_name="fiches_sanitaires_fusionnees.zip",
                                    mime="application/zip",
                                    type="primary",
                                    use_container_width=True
                                )
                            st.markdown("""
                            <div class="success-box">
                                <strong>Flotte de documents pr√™te !</strong><br>
                                Toutes vos fiches ont √©t√© fusionn√©es avec succ√®s et sont pr√™tes au t√©l√©chargement dans un fichier ZIP.
                            </div>
                            """, unsafe_allow_html=True)
                        else:
                            st.markdown("""
                            <div class="error-box">
                                <strong>Erreur d'Ancrage !</strong><br>
                                Aucun fichier de sortie n'a √©t√© g√©n√©r√© ou le fichier ZIP est introuvable.
                                V√©rifiez que les noms de vos fiches et photos correspondent bien (ex: "Nom_Pr√©nom.pdf" et "Nom_Pr√©nom.jpg").
                                *V√©rifiez les messages d'erreur dans votre terminal pour plus de d√©tails.*
                            </div>
                            """, unsafe_allow_html=True)

                    except Exception as e:
                        st.markdown(f"""
                        <div class="error-box">
                            <strong>Temp√™te en Mer !</strong><br>
                            Une erreur inattendue s'est produite lors du traitement par lot : {str(e)}<br>
                            Assurez-vous que tous les fichiers √† traiter ont une photo correspondante avec le m√™me nom (sans l'extension) et que le module de traitement est correctement configur√©.
                        </div>
                        """, unsafe_allow_html=True)

                    finally:
                        # Nettoyage des r√©pertoires temporaires
                        if temp_dir and os.path.exists(temp_dir):
                            try:
                                shutil.rmtree(temp_dir)
                            except Exception as e:
                                st.warning(f"Impossible de nettoyer le r√©pertoire temporaire {temp_dir}: {e}")
        # Message si pas de correspondances apr√®s l'upload
        elif not fiches_files and not photos_files:
            pass # Ne rien faire tant que l'utilisateur n'a rien upload√©
        else: # Si l'un des deux est t√©l√©charg√© mais pas l'autre ou pas de correspondance apr√®s l'analyse
            st.markdown("""
            <div class="error-box">
                <strong>Chargement incomplet ou pas de correspondances valides !</strong><br>
                Veuillez t√©l√©charger √† la fois des fiches PDF et des photos, et assurez-vous qu'ils ont des noms correspondants pour activer le traitement par lot.
            </div>
            """, unsafe_allow_html=True)

# Footer
st.markdown("""
---
<div class="footer-ocean">
    <div class="footer-fish-eye"></div>
    <div class="footer-fish-tail"></div>
    <p style="font-size: 0.9rem; margin-top: 1rem; color: #1e40af;">
        D√©velopp√© avec passion par MakeAFish - ¬© 2025 Tous droits r√©serv√©s.
    </p>
</div>
""", unsafe_allow_html=True)